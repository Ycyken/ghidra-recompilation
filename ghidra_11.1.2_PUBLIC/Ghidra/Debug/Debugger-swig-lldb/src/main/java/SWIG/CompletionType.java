/* ###
 * IP: Apache License 2.0 with LLVM Exceptions
 */
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package SWIG;

public final class CompletionType {
  public final static CompletionType eNoCompletion = new CompletionType("eNoCompletion", lldbJNI.eNoCompletion_get());
  public final static CompletionType eSourceFileCompletion = new CompletionType("eSourceFileCompletion", lldbJNI.eSourceFileCompletion_get());
  public final static CompletionType eDiskFileCompletion = new CompletionType("eDiskFileCompletion", lldbJNI.eDiskFileCompletion_get());
  public final static CompletionType eDiskDirectoryCompletion = new CompletionType("eDiskDirectoryCompletion", lldbJNI.eDiskDirectoryCompletion_get());
  public final static CompletionType eSymbolCompletion = new CompletionType("eSymbolCompletion", lldbJNI.eSymbolCompletion_get());
  public final static CompletionType eModuleCompletion = new CompletionType("eModuleCompletion", lldbJNI.eModuleCompletion_get());
  public final static CompletionType eSettingsNameCompletion = new CompletionType("eSettingsNameCompletion", lldbJNI.eSettingsNameCompletion_get());
  public final static CompletionType ePlatformPluginCompletion = new CompletionType("ePlatformPluginCompletion", lldbJNI.ePlatformPluginCompletion_get());
  public final static CompletionType eArchitectureCompletion = new CompletionType("eArchitectureCompletion", lldbJNI.eArchitectureCompletion_get());
  public final static CompletionType eVariablePathCompletion = new CompletionType("eVariablePathCompletion", lldbJNI.eVariablePathCompletion_get());
  public final static CompletionType eRegisterCompletion = new CompletionType("eRegisterCompletion", lldbJNI.eRegisterCompletion_get());
  public final static CompletionType eBreakpointCompletion = new CompletionType("eBreakpointCompletion", lldbJNI.eBreakpointCompletion_get());
  public final static CompletionType eProcessPluginCompletion = new CompletionType("eProcessPluginCompletion", lldbJNI.eProcessPluginCompletion_get());
  public final static CompletionType eDisassemblyFlavorCompletion = new CompletionType("eDisassemblyFlavorCompletion", lldbJNI.eDisassemblyFlavorCompletion_get());
  public final static CompletionType eTypeLanguageCompletion = new CompletionType("eTypeLanguageCompletion", lldbJNI.eTypeLanguageCompletion_get());
  public final static CompletionType eFrameIndexCompletion = new CompletionType("eFrameIndexCompletion", lldbJNI.eFrameIndexCompletion_get());
  public final static CompletionType eModuleUUIDCompletion = new CompletionType("eModuleUUIDCompletion", lldbJNI.eModuleUUIDCompletion_get());
  public final static CompletionType eStopHookIDCompletion = new CompletionType("eStopHookIDCompletion", lldbJNI.eStopHookIDCompletion_get());
  public final static CompletionType eThreadIndexCompletion = new CompletionType("eThreadIndexCompletion", lldbJNI.eThreadIndexCompletion_get());
  public final static CompletionType eWatchpointIDCompletion = new CompletionType("eWatchpointIDCompletion", lldbJNI.eWatchpointIDCompletion_get());
  public final static CompletionType eBreakpointNameCompletion = new CompletionType("eBreakpointNameCompletion", lldbJNI.eBreakpointNameCompletion_get());
  public final static CompletionType eProcessIDCompletion = new CompletionType("eProcessIDCompletion", lldbJNI.eProcessIDCompletion_get());
  public final static CompletionType eProcessNameCompletion = new CompletionType("eProcessNameCompletion", lldbJNI.eProcessNameCompletion_get());
  public final static CompletionType eRemoteDiskFileCompletion = new CompletionType("eRemoteDiskFileCompletion", lldbJNI.eRemoteDiskFileCompletion_get());
  public final static CompletionType eRemoteDiskDirectoryCompletion = new CompletionType("eRemoteDiskDirectoryCompletion", lldbJNI.eRemoteDiskDirectoryCompletion_get());
  public final static CompletionType eTypeCategoryNameCompletion = new CompletionType("eTypeCategoryNameCompletion", lldbJNI.eTypeCategoryNameCompletion_get());
  public final static CompletionType eCustomCompletion = new CompletionType("eCustomCompletion", lldbJNI.eCustomCompletion_get());

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static CompletionType swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + CompletionType.class + " with value " + swigValue);
  }

  private CompletionType(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private CompletionType(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private CompletionType(String swigName, CompletionType swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static CompletionType[] swigValues = { eNoCompletion, eSourceFileCompletion, eDiskFileCompletion, eDiskDirectoryCompletion, eSymbolCompletion, eModuleCompletion, eSettingsNameCompletion, ePlatformPluginCompletion, eArchitectureCompletion, eVariablePathCompletion, eRegisterCompletion, eBreakpointCompletion, eProcessPluginCompletion, eDisassemblyFlavorCompletion, eTypeLanguageCompletion, eFrameIndexCompletion, eModuleUUIDCompletion, eStopHookIDCompletion, eThreadIndexCompletion, eWatchpointIDCompletion, eBreakpointNameCompletion, eProcessIDCompletion, eProcessNameCompletion, eRemoteDiskFileCompletion, eRemoteDiskDirectoryCompletion, eTypeCategoryNameCompletion, eCustomCompletion };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

