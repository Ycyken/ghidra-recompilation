/* ###
 * IP: Apache License 2.0 with LLVM Exceptions
 */
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package SWIG;

public final class LanguageType {
  public final static LanguageType eLanguageTypeUnknown = new LanguageType("eLanguageTypeUnknown", lldbJNI.eLanguageTypeUnknown_get());
  public final static LanguageType eLanguageTypeC89 = new LanguageType("eLanguageTypeC89", lldbJNI.eLanguageTypeC89_get());
  public final static LanguageType eLanguageTypeC = new LanguageType("eLanguageTypeC", lldbJNI.eLanguageTypeC_get());
  public final static LanguageType eLanguageTypeAda83 = new LanguageType("eLanguageTypeAda83", lldbJNI.eLanguageTypeAda83_get());
  public final static LanguageType eLanguageTypeC_plus_plus = new LanguageType("eLanguageTypeC_plus_plus", lldbJNI.eLanguageTypeC_plus_plus_get());
  public final static LanguageType eLanguageTypeCobol74 = new LanguageType("eLanguageTypeCobol74", lldbJNI.eLanguageTypeCobol74_get());
  public final static LanguageType eLanguageTypeCobol85 = new LanguageType("eLanguageTypeCobol85", lldbJNI.eLanguageTypeCobol85_get());
  public final static LanguageType eLanguageTypeFortran77 = new LanguageType("eLanguageTypeFortran77", lldbJNI.eLanguageTypeFortran77_get());
  public final static LanguageType eLanguageTypeFortran90 = new LanguageType("eLanguageTypeFortran90", lldbJNI.eLanguageTypeFortran90_get());
  public final static LanguageType eLanguageTypePascal83 = new LanguageType("eLanguageTypePascal83", lldbJNI.eLanguageTypePascal83_get());
  public final static LanguageType eLanguageTypeModula2 = new LanguageType("eLanguageTypeModula2", lldbJNI.eLanguageTypeModula2_get());
  public final static LanguageType eLanguageTypeJava = new LanguageType("eLanguageTypeJava", lldbJNI.eLanguageTypeJava_get());
  public final static LanguageType eLanguageTypeC99 = new LanguageType("eLanguageTypeC99", lldbJNI.eLanguageTypeC99_get());
  public final static LanguageType eLanguageTypeAda95 = new LanguageType("eLanguageTypeAda95", lldbJNI.eLanguageTypeAda95_get());
  public final static LanguageType eLanguageTypeFortran95 = new LanguageType("eLanguageTypeFortran95", lldbJNI.eLanguageTypeFortran95_get());
  public final static LanguageType eLanguageTypePLI = new LanguageType("eLanguageTypePLI", lldbJNI.eLanguageTypePLI_get());
  public final static LanguageType eLanguageTypeObjC = new LanguageType("eLanguageTypeObjC", lldbJNI.eLanguageTypeObjC_get());
  public final static LanguageType eLanguageTypeObjC_plus_plus = new LanguageType("eLanguageTypeObjC_plus_plus", lldbJNI.eLanguageTypeObjC_plus_plus_get());
  public final static LanguageType eLanguageTypeUPC = new LanguageType("eLanguageTypeUPC", lldbJNI.eLanguageTypeUPC_get());
  public final static LanguageType eLanguageTypeD = new LanguageType("eLanguageTypeD", lldbJNI.eLanguageTypeD_get());
  public final static LanguageType eLanguageTypePython = new LanguageType("eLanguageTypePython", lldbJNI.eLanguageTypePython_get());
  public final static LanguageType eLanguageTypeOpenCL = new LanguageType("eLanguageTypeOpenCL", lldbJNI.eLanguageTypeOpenCL_get());
  public final static LanguageType eLanguageTypeGo = new LanguageType("eLanguageTypeGo", lldbJNI.eLanguageTypeGo_get());
  public final static LanguageType eLanguageTypeModula3 = new LanguageType("eLanguageTypeModula3", lldbJNI.eLanguageTypeModula3_get());
  public final static LanguageType eLanguageTypeHaskell = new LanguageType("eLanguageTypeHaskell", lldbJNI.eLanguageTypeHaskell_get());
  public final static LanguageType eLanguageTypeC_plus_plus_03 = new LanguageType("eLanguageTypeC_plus_plus_03", lldbJNI.eLanguageTypeC_plus_plus_03_get());
  public final static LanguageType eLanguageTypeC_plus_plus_11 = new LanguageType("eLanguageTypeC_plus_plus_11", lldbJNI.eLanguageTypeC_plus_plus_11_get());
  public final static LanguageType eLanguageTypeOCaml = new LanguageType("eLanguageTypeOCaml", lldbJNI.eLanguageTypeOCaml_get());
  public final static LanguageType eLanguageTypeRust = new LanguageType("eLanguageTypeRust", lldbJNI.eLanguageTypeRust_get());
  public final static LanguageType eLanguageTypeC11 = new LanguageType("eLanguageTypeC11", lldbJNI.eLanguageTypeC11_get());
  public final static LanguageType eLanguageTypeSwift = new LanguageType("eLanguageTypeSwift", lldbJNI.eLanguageTypeSwift_get());
  public final static LanguageType eLanguageTypeJulia = new LanguageType("eLanguageTypeJulia", lldbJNI.eLanguageTypeJulia_get());
  public final static LanguageType eLanguageTypeDylan = new LanguageType("eLanguageTypeDylan", lldbJNI.eLanguageTypeDylan_get());
  public final static LanguageType eLanguageTypeC_plus_plus_14 = new LanguageType("eLanguageTypeC_plus_plus_14", lldbJNI.eLanguageTypeC_plus_plus_14_get());
  public final static LanguageType eLanguageTypeFortran03 = new LanguageType("eLanguageTypeFortran03", lldbJNI.eLanguageTypeFortran03_get());
  public final static LanguageType eLanguageTypeFortran08 = new LanguageType("eLanguageTypeFortran08", lldbJNI.eLanguageTypeFortran08_get());
  public final static LanguageType eLanguageTypeRenderScript = new LanguageType("eLanguageTypeRenderScript", lldbJNI.eLanguageTypeRenderScript_get());
  public final static LanguageType eLanguageTypeBLISS = new LanguageType("eLanguageTypeBLISS", lldbJNI.eLanguageTypeBLISS_get());
  public final static LanguageType eLanguageTypeKotlin = new LanguageType("eLanguageTypeKotlin", lldbJNI.eLanguageTypeKotlin_get());
  public final static LanguageType eLanguageTypeZig = new LanguageType("eLanguageTypeZig", lldbJNI.eLanguageTypeZig_get());
  public final static LanguageType eLanguageTypeCrystal = new LanguageType("eLanguageTypeCrystal", lldbJNI.eLanguageTypeCrystal_get());
  public final static LanguageType eLanguageTypeC_plus_plus_17 = new LanguageType("eLanguageTypeC_plus_plus_17", lldbJNI.eLanguageTypeC_plus_plus_17_get());
  public final static LanguageType eLanguageTypeC_plus_plus_20 = new LanguageType("eLanguageTypeC_plus_plus_20", lldbJNI.eLanguageTypeC_plus_plus_20_get());
  public final static LanguageType eLanguageTypeC17 = new LanguageType("eLanguageTypeC17", lldbJNI.eLanguageTypeC17_get());
  public final static LanguageType eLanguageTypeFortran18 = new LanguageType("eLanguageTypeFortran18", lldbJNI.eLanguageTypeFortran18_get());
  public final static LanguageType eLanguageTypeAda2005 = new LanguageType("eLanguageTypeAda2005", lldbJNI.eLanguageTypeAda2005_get());
  public final static LanguageType eLanguageTypeAda2012 = new LanguageType("eLanguageTypeAda2012", lldbJNI.eLanguageTypeAda2012_get());
  public final static LanguageType eLanguageTypeHIP = new LanguageType("eLanguageTypeHIP", lldbJNI.eLanguageTypeHIP_get());
  public final static LanguageType eLanguageTypeAssembly = new LanguageType("eLanguageTypeAssembly", lldbJNI.eLanguageTypeAssembly_get());
  public final static LanguageType eLanguageTypeC_sharp = new LanguageType("eLanguageTypeC_sharp", lldbJNI.eLanguageTypeC_sharp_get());
  public final static LanguageType eLanguageTypeMojo = new LanguageType("eLanguageTypeMojo", lldbJNI.eLanguageTypeMojo_get());
  public final static LanguageType eLanguageTypeMipsAssembler = new LanguageType("eLanguageTypeMipsAssembler");
  public final static LanguageType eNumLanguageTypes = new LanguageType("eNumLanguageTypes");

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static LanguageType swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + LanguageType.class + " with value " + swigValue);
  }

  private LanguageType(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private LanguageType(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private LanguageType(String swigName, LanguageType swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static LanguageType[] swigValues = { eLanguageTypeUnknown, eLanguageTypeC89, eLanguageTypeC, eLanguageTypeAda83, eLanguageTypeC_plus_plus, eLanguageTypeCobol74, eLanguageTypeCobol85, eLanguageTypeFortran77, eLanguageTypeFortran90, eLanguageTypePascal83, eLanguageTypeModula2, eLanguageTypeJava, eLanguageTypeC99, eLanguageTypeAda95, eLanguageTypeFortran95, eLanguageTypePLI, eLanguageTypeObjC, eLanguageTypeObjC_plus_plus, eLanguageTypeUPC, eLanguageTypeD, eLanguageTypePython, eLanguageTypeOpenCL, eLanguageTypeGo, eLanguageTypeModula3, eLanguageTypeHaskell, eLanguageTypeC_plus_plus_03, eLanguageTypeC_plus_plus_11, eLanguageTypeOCaml, eLanguageTypeRust, eLanguageTypeC11, eLanguageTypeSwift, eLanguageTypeJulia, eLanguageTypeDylan, eLanguageTypeC_plus_plus_14, eLanguageTypeFortran03, eLanguageTypeFortran08, eLanguageTypeRenderScript, eLanguageTypeBLISS, eLanguageTypeKotlin, eLanguageTypeZig, eLanguageTypeCrystal, eLanguageTypeC_plus_plus_17, eLanguageTypeC_plus_plus_20, eLanguageTypeC17, eLanguageTypeFortran18, eLanguageTypeAda2005, eLanguageTypeAda2012, eLanguageTypeHIP, eLanguageTypeAssembly, eLanguageTypeC_sharp, eLanguageTypeMojo, eLanguageTypeMipsAssembler, eNumLanguageTypes };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

