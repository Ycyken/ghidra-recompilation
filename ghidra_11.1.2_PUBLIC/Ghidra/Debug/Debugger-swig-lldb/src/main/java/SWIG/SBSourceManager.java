/* ###
 * IP: Apache License 2.0 with LLVM Exceptions
 */
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package SWIG;

public class SBSourceManager {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected SBSourceManager(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SBSourceManager obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(SBSourceManager obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        lldbJNI.delete_SBSourceManager(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public SBSourceManager(SBDebugger debugger) {
    this(lldbJNI.new_SBSourceManager__SWIG_0(SBDebugger.getCPtr(debugger), debugger), true);
  }

  public SBSourceManager(SBTarget target) {
    this(lldbJNI.new_SBSourceManager__SWIG_1(SBTarget.getCPtr(target), target), true);
  }

  public SBSourceManager(SBSourceManager rhs) {
    this(lldbJNI.new_SBSourceManager__SWIG_2(SBSourceManager.getCPtr(rhs), rhs), true);
  }

  public long DisplaySourceLinesWithLineNumbers(SBFileSpec file, long line, long context_before, long context_after, String current_line_cstr, SBStream s) {
    return lldbJNI.SBSourceManager_DisplaySourceLinesWithLineNumbers(swigCPtr, this, SBFileSpec.getCPtr(file), file, line, context_before, context_after, current_line_cstr, SBStream.getCPtr(s), s);
  }

  public long DisplaySourceLinesWithLineNumbersAndColumn(SBFileSpec file, long line, long column, long context_before, long context_after, String current_line_cstr, SBStream s) {
    return lldbJNI.SBSourceManager_DisplaySourceLinesWithLineNumbersAndColumn(swigCPtr, this, SBFileSpec.getCPtr(file), file, line, column, context_before, context_after, current_line_cstr, SBStream.getCPtr(s), s);
  }

}
